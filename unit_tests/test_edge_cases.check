#suite test_edge_cases

#test test_edge_cases1
double a = __DBL_MAX__;
double b = __DBL_MAX__;
double c = __DBL_MAX__;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, isnan(roots.root[0]) && isnan(roots.root[1]));
ck_assert_int_eq(0, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases2
double a = 0;
double b = __DBL_MAX__;
double c = __DBL_MAX__;
double x1 = -1.0;
double x2 = -1.0;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(1, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases3
double a = __DBL_MAX__;
double b = __DBL_MAX__;
double c = -__DBL_MAX__;
double x1 = 0.618033988749894;
double x2 = -1.618033988749894;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases4
double a = __DBL_MAX__ / 10.;
double b = __DBL_MAX__;
double c = -__DBL_MAX__;
double x1 = 0.916079783099616;
double x2 = -10.916079783099616;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases5
double a = __DBL_DENORM_MIN__;
double b = 0;
double c = -100;
double x1 = 4.498913794543196e+162;
double x2 = -4.498913794543196e+162;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases6
double a = __DBL_DENORM_MIN__;
double b = 0;
double c = -1.0e280;
double x1 = 4.498913794543197e+301;
double x2 = -4.498913794543197e+301;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases7
double a = -21;
double b = 8e+150;
double c = 1.08145e+300;
double x1 = -1.0579867883597554e+149;
double x2 = 4.8675105978835645e+149;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases8
double a = -0.002;
double b = 8.0e+149;
double c = 1.0e+299;
double x1 = -1.2496096189501535e+149;
double x2 = 4.0012496096189503e+152;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases9
double a = 4.0e-287;
double b = -1000;
double c = -8.0e+290;
double x1 = 2.5775918047351755e+289;
double x2 = -7.759180473517537e+287;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);

#test test_edge_cases10
double a = 8e+295;
double b = -1.0e29;
double c = 0;
double x1 = 0;
double x2 = 1.25e-267;
quadratic_roots roots;
roots = solve_equation(a, b, c);
ck_assert_int_eq(1, compare_roots(x1, x2, &roots));
ck_assert_int_eq(2, roots.num_roots);
ck_assert_int_eq(OK, roots.err);
